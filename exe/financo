#!/usr/bin/env ruby
# frozen_string_literal: true

lib = File.expand_path("../lib", __dir__)
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)

require "fileutils"
require "financo"
require "financo/n26/bank"
require "financo/n26/client"
require "financo/n26/history_store"
require "financo/cli/program"
require "financo/cli/config_store"

base_dir = File.join(Dir.pwd, ".financo")
FileUtils.mkdir_p(base_dir, mode: 0o700)

journal_name = "journal-#{Time.now.to_i}.ledger"
journal = Financo::Journal.new(File.open(journal_name, "w"))

uri = URI.parse("https://api.tech26.de")
http = Net::HTTP.start(uri.host, uri.port, use_ssl: uri.scheme == "https")

bank = Financo::N26::Bank.new(
  Financo::N26::Client.new(http, uri),
  Financo::N26::HistoryStore.new(base_dir),
)

p = Financo::CLI::Program.new(
  stdout: STDOUT,
  stdin: STDIN,

  version: Financo::VERSION,
  journal: journal,

  account_info: bank.method(:info),
  account_transactions: bank.method(:transactions),
  config_store: Financo::CLI::ConfigStore.new(base_dir),
)

begin
  p.run
  puts p.stats
ensure
  http.finish if http.started?

  # close journal stream
  journal.close

  # remove journal if empty
  File.unlink(journal_name) if p.stats.empty?
end
